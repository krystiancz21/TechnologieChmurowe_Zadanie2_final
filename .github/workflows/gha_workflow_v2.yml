name: gha_workflow:Docker_Zad2_dodatkowe

on:
  workflow_dispatch:
    # push:
    #   branches:
    #     - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Semantic versioning
        id: versioning
        uses: PaulHatch/semantic-version@v4.0.2
        with:
            branch: main
            tag_prefix: "v"
            major_pattern: "BREAKING CHANGE:"
            minor_pattern: "feat:"
            format: "v${major}.${minor}.${patch}"
      
      - name: Generated version
        run: echo ${{ steps.set_version.outputs.version }}

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v2
        
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/x86_64,linux/arm64/v8
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/tchzadanie2img:${{ steps.versioning.outputs.version }}
          cache-from: type=registry,ref=${{ github.repository_owner }}/tchzadanie2img:${{ steps.versioning.outputs.version  }}
          cache-to: type=inline
    
      - name: Create Release
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
        with:
            tag_name: ${{ steps.versioning.outputs.version }}
            release_name: ${{ steps.versioning.outputs.version }}
            prerelease: true

      - name: Scan Docker image üê≥
        uses: snyk/actions/docker@master
        continue-on-error: true
        with:
          image: ghcr.io/${{ github.repository_owner }}/tchzadanie2img:${{ steps.versioning.outputs.version }}
          args: --file=Dockerfile --severity-threshold=critical --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
